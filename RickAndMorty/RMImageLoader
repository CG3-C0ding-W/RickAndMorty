
Import Foundation

final class RMImageLoader {
  static let shared = RMImageLoader()
  
  private var imageDataCache = NSCache<NSString, NSData>()
  
  private init() {}
  
  /// Get image content with URL
  /// - Parameters:
  ///    - url: Source URL
  ///    - completion: Callback
  
  func downloadImage(_ url: URL, completon: @escaping (Result<Data, Error>) -> Void) {
     if let data = imageDataCache.object(forKey: key) {
        print("Reading from the cache: \(key)")
        completion(.success(data as Data)) //NSData == Data | NSString == String
        return
     }
      
      let request =  URLRequest(url: url)
      let task = URLSession.shared.dataTask(with: request){ [weak self] data, _, error in
          guard let data = data, error == nil else {
              completion(.failure(error ?? URLError(.badServerResponse)))
              return
          }
          let key url.absoluteString as NSString
          let value = data as NSData
          self?.imageDataCache.setObject(value, forKey: key)
          completion(.success(data))
      }
      task.resume()
  }
}
